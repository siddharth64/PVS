  Majority  % [ parameters ]
		: THEORY

  BEGIN
 
  % ASSUMING
   % assuming declarations
  % ENDASSUMING
  
  cand: TYPE = {A, B, C, D, E}
  votes : TYPE = ARRAY[nat -> cand]
  x: VAR cand
  i, size: VAR nat
  L: VAR votes
  aux(L, size, x, i): RECURSIVE cand =
  	IF (size=0) THEN x
	ELSIF (i=0) THEN aux(L, size-1, L(size-1), 1)
	ELSIF (x=L(size-1)) THEN aux(L, size-1, L(size-1), i+1)
	ELSE aux(L, size-1, x, i-1)
  	ENDIF
  MEASURE size
  
  findMajority (L: votes, size: nat): cand = 
	aux (L, size, A, 0)
  
  END Majority
